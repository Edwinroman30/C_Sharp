<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        c17Z1B//9+37969v+qZOLbz5cPv7JpTfPn3++ul284tfdq5ED91mCq2mmpnZ817Z1Pk15eYite9r18Uh
        ijfdrw9cdB66TX+l23V6T4bNzMye03aa+uHLL7ebz9wO153Dp3Cni9dNL2cfn+/IbfrEaqqZmT3z7fke
        pXwNdXPdmRBqqpmZ2b3b09T+s7jfNl8T/Xw7+8j4ed3x19Pt772NppqZWQvb19T+KnMriuNHPm2+MtrZ
        XI9Otz9+m+76dbrNbonNzMyezfY0tdvmE7mzv1HTrbv0HL59t7uEvWvtH1+7/53/dvc2bzTVzMza2P6m
        7t3Nhy8/fvwyD+3ultzGzMzsWe4BTTUzM7Mj01QzM7N1pqlmZmbrTFPNzMzW2Zmauvk5EuPfdt3doZ8j
        seJuPm6+ear4oJmZ2Yorm3rz8Z/fb78Pv/5++3Xhv9o2/KWa+eYFHX7e4epN3f0LP4c2/zuynz7fzu/y
        4x9br/eXP3TXzMweuZ2mbtdx74932N3wQ/PnH9lt6rqXocMzLjy8oanfb1PWqcR7/ijg5z2Zmdljt+c6
        dfgnZW4+/L25ENw0ZusicvoXVae7dDv00wfffO5j9v1b95jdI0xXltODDJ8Tnu7eP+PX34d7dVfJB3qZ
        SH/+uvBHHg4P2z1ad8c3m1/3LzBV/tZdm/Y/o/jv7pp1OM6utd3tf0mJvw4XsnclHi/lhyNceMxmZvbs
        t7+pk09d8IbyDU0a/uvOZ3F3L/i6aHWxmX8kTd08zvBTDPOLTcP6h929y6Gfu9Q/TtfCJLD4r7sbn3f4
        g0J+FnEe5GP/A4qzfI66OIxhuXF/qNMHlx+zmZk9+x29Tp2u2/oPjlHcc2m4r6lDnzbXdtOXS/vrv2+/
        9FUbo9iHavh4f53a3be/Ijz4Fdap6/kJw4e/TDutP+yZ7WvlWVPzpNNhvNkc6rfutUynpf/jxRTXpcds
        ZmYt7HBTP37pijLUq/t435LevoZNUZz1adbUj/+kqUMONw/ydfORzU/b7y8fZ00dH2d/n4aHnX9keIT5
        R3a31dSxo7Pnmh1wcRhjOKfjuSvxeKLuPWYzM2tk+5s6/barxfDJzDGHm3hM/3XavuvUXMBN2zS1r07/
        IEPAUujtpg6fpD3Q1O3DGzYc4ZGNDzv+KWFIYF5R18hv47+lk2csMrn5E8aBTwt3t7/3mM3MrJEdbOqm
        NJ//mf4uzRSV4bfFisvHMUjdVd1dge5y1V/nTd3qPtg/adHU/U833GuK6HC0wyMPXd/b1+lhu1/ffLzd
        PHKuNW9/GY+we72/j3+Rpm98mcnxCvXLcJfN7bsSf77tv+np2DGbmVkjK5t6aH1mNldsxcfNzMxs2NKm
        Tl9HLD5uZmZmw5Y21czMzI5PU83MzNaZppqZma0zTTUzM1tnmmpmZrbONNXMzGydaaqZmdk601QzM7M1
        dvOv/wdaYnjjhQVNaQAAAABJRU5ErkJggg==
</value>
  </data>
</root>